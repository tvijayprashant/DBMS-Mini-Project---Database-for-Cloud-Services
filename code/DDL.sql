DROP DATABASE cloud_management;
CREATE DATABASE cloud_management;
\c cloud_management;

CREATE EXTENSION pgcrypto;

select gen_salt('bf') into salt;

CREATE TYPE GPU_FAMILY AS (
    NVIDIA_TESLA_A100 INT,
    NVIDIA_TESLA_V100 INT,
    NVIDIA_TESLA_K80 INT,
    NVIDIA_TESLA_T4 INT,
    NVIDIA_TESLA_P4 INT
);

CREATE TYPE RAM_FAMILY AS (
    BLK1 INT,
    BLK2 INT,
    BLK3 INT,
    BLK4 INT
);

CREATE TYPE DISK_FAMILY AS (
    HDD INT,
    SSD INT,
    BALANCED INT
);

CREATE TYPE MACHINE_FAMILY AS (
    EC2 INT,
    N1 INT,
    N2 INT,
    C2 INT,
    A2 INT
);

CREATE TYPE COST_METRICS AS (
    CPU DECIMAL,
    GPU DECIMAL,
    DISK DECIMAL,
    NETWORK DECIMAL,
    RAM DECIMAL
);

CREATE TYPE ALERT_METRICS AS(
    ALERT_ENABLED INT,
    CPU_THRESHOLD_USAGE DECIMAL,
    GPU_THRESHOLD_USAGE DECIMAL,
    DISK_THRESHOLD_USAGE DECIMAL,
    RAM_THRESHOLD_USAGE DECIMAL,
    NETWORK_USAGE DECIMAL,
    COST DECIMAL
);

CREATE TYPE LIMIT_QUOTAS_ZONE AS (
    NO_VMS INT,
    GPU_PREMPT GPU_FAMILY,
    GPU GPU_FAMILY,
    DISK DISK_FAMILY,
    MACHINE_FAMILY_PREMPT MACHINE_FAMILY,
    MACHINE_FAMILY MACHINE_FAMILY
);

CREATE TYPE LIMIT_QUOTAS AS (
    Z1 LIMIT_QUOTAS_ZONE,
    Z2 LIMIT_QUOTAS_ZONE,
    Z3 LIMIT_QUOTAS_ZONE,
    Z4 LIMIT_QUOTAS_ZONE
);

CREATE TABLE VM (
    VM_ID CHAR(10) PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL,
    BOOT_DISK VARCHAR(30) NOT NULL DEFAULT 'Ubuntu-18.04',
    STATUS VARCHAR(30) NOT NULL DEFAULT 'Stopped',
    PREEMPTIBILITY BOOLEAN DEFAULT FALSE,
    INTERNAL_IP CIDR NOT NULL,
    EXTERNAL_IP CIDR UNIQUE,
    HOST_NAME VARCHAR(30) NOT NULL,
    NETWORK_TAG VARCHAR(30),
    SUBNET VARCHAR(30),
    TRANSFER_VM_ID CHAR(10),
    RACK_ID CHAR(10) NOT NULL,
    ZONE_NAME VARCHAR(30),
    PROJECT_ID CHAR(12),
    RAM INT NOT NULL,
    GPU GPU_FAMILY NOT NULL,
    DISK DISK_FAMILY NOT NULL,
    MACHINE VARCHAR(30) NOT NULL CHECK (MACHINE IN ('A2','N1','N2','C2','EC2'))
);

CREATE TABLE USER_ (
    USER_ID CHAR(10) PRIMARY KEY,
    ADMIN INT,
    NAME VARCHAR(20) NOT NULL,
    EMAIL_ID VARCHAR(30) UNIQUE NOT NULL,
    PASSWD TEXT NOT NULL,
    CREDITS DECIMAL NOT NULL,
    PAYMENT_TYPE VARCHAR(20) NOT NULL
);

CREATE TABLE PROJECT(
    PROJECT_ID CHAR(12) PRIMARY KEY,
    QUOTAS LIMIT_QUOTAS NOT NULL DEFAULT (
        (5, (1,0,0,0,0), (0,0,0,0,0), (100,200,200), (5,3,5,1,1), (5,3,5,1,0)),
        (5, (0,0,0,0,0), (0,1,1,1,1), (100,200,200), (5,3,5,1,0), (5,3,5,1,0)),
        (5, (1,2,0,0,0), (0,2,0,0,0), (100,200,200), (5,3,5,1,1), (5,3,5,1,0)),
        (5, (0,2,0,0,0), (0,1,1,1,1), (100,200,200), (5,3,5,1,0), (5,3,5,1,0)))
);

CREATE TABLE ZONE(
    ZONE_NAME VARCHAR(20) PRIMARY KEY,
    GPU_AVAILABLE GPU_FAMILY NOT NULL,
    RAM_AVAILABLE RAM_FAMILY NOT NULL,
    DISK_AVAILABLE DISK_FAMILY NOT NULL,
    MACHINE_TYPE_AVAILABLE MACHINE_FAMILY NOT NULL
);

CREATE TABLE HARDWARE(
    RACK_ID CHAR(10),
    ZONE_NAME VARCHAR(20),
    DISK DISK_FAMILY NOT NULL,
    GPU GPU_FAMILY NOT NULL,
    MACHINE_FAMILY MACHINE_FAMILY NOT NULL,
    RAM INT NOT NULL,
    PRIMARY KEY (RACK_ID,ZONE_NAME)
);

CREATE TABLE RUNTIME(
    VM_ID CHAR(10),
    TIME TIMESTAMP,
    DISK_USAGE DECIMAL NOT NULL,
    RAM_USAGE DECIMAL NOT NULL,
    GPU_USAGE DECIMAL NOT NULL,
    CPU_USAGE DECIMAL NOT NULL,
    GPU_RUNTIME TIME NOT NULL,
    CPU_RUNTIME TIME NOT NULL,
    PRIMARY KEY(VM_ID,TIME)
);

CREATE TABLE WORKED_ON(
    PROJECT_ID CHAR(12),
    USER_ID CHAR(10),
    PRIMARY KEY(PROJECT_ID,USER_ID)
);

CREATE TABLE MONITORS(
    TIME TIMESTAMP,
    VM_ID CHAR(10),
    ALERT ALERT_METRICS NOT NULL,
    COST COST_METRICS NOT NULL,
    PRIMARY KEY(TIME,VM_ID)
);

CREATE TABLE ACCESS(
    VM_ID CHAR(10),
    USER_ID CHAR(10),
    PRIMARY KEY (VM_ID,USER_ID) 
);

CREATE VIEW USER_EMAILS AS SELECT EMAIL_ID from USER_;

ALTER TABLE VM ADD CONSTRAINT FK_VM_TRANSFER_VM FOREIGN KEY (TRANSFER_VM_ID) REFERENCES VM(VM_ID) ON UPDATE CASCADE;
ALTER TABLE VM ADD CONSTRAINT FK_VM_RACK_ID FOREIGN KEY (RACK_ID,ZONE_NAME) REFERENCES HARDWARE(RACK_ID,ZONE_NAME);
-- ALTER TABLE VM ADD CONSTRAINT FK_VM_ZONE_NAME FOREIGN KEY (ZONE_NAME) REFERENCES ZONE(ZONE_NAME);
ALTER TABLE VM ADD CONSTRAINT FK_VM_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID);

ALTER TABLE HARDWARE ADD CONSTRAINT FK_HARDWARE_ZONE_NAME FOREIGN KEY (ZONE_NAME) REFERENCES ZONE(ZONE_NAME);

ALTER TABLE RUNTIME ADD CONSTRAINT FK_RUNTIME_VM_ID FOREIGN KEY (VM_ID) REFERENCES VM(VM_ID) ON UPDATE CASCADE;

ALTER TABLE WORKED_ON ADD CONSTRAINT FK_WORKED_ON_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID);
ALTER TABLE WORKED_ON ADD CONSTRAINT FK_WORKED_ON_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER_(USER_ID);

ALTER TABLE MONITORS ADD CONSTRAINT FK_MONITORS_TIME FOREIGN KEY (VM_ID,TIME) REFERENCES RUNTIME(VM_ID,TIME) ON UPDATE CASCADE;
-- ALTER TABLE MONITORS ADD CONSTRAINT FK_MONITORS_VM_ID FOREIGN KEY (VM_ID) REFERENCES VM(VM_ID);

ALTER TABLE ACCESS ADD CONSTRAINT FK_ACCESS_VM_ID FOREIGN KEY (VM_ID) REFERENCES VM(VM_ID) ON UPDATE CASCADE;
ALTER TABLE ACCESS ADD CONSTRAINT FK_ACCESS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER_(USER_ID);